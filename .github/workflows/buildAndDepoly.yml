name: Deploy Dockerhub

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Package
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t solomon11/classwork:latest .

      - name: Push Docker image to Docker Hub
        run: docker push solomon11/classwork:latest

      - name: Deploy to AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          INSTANCE_IP: ${{ secrets.AWS_INSTANCE_IP }}
        run: |
          echo "$PRIVATE_KEY" > aws_key.pem
          chmod 600 aws_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H $INSTANCE_IP >> ~/.ssh/known_hosts
          
          # Copy the .env file to EC2 instance
          scp -i aws_key.pem .env ubuntu@$INSTANCE_IP:/home/ubuntu/.env

          # Verify .env file exists on EC2 instance
          ssh -i aws_key.pem ubuntu@$INSTANCE_IP "ls -la /home/ubuntu/.env"

          # Pull and run the Docker container on EC2
          ssh -i aws_key.pem ubuntu@$INSTANCE_IP << 'EOF'
          sudo docker pull solomon11/classwork:latest
          sudo docker stop classwk-container || true
          sudo docker rm classwk-container || true
          sudo docker run -d -p 9090:9090 --env-file=/home/ubuntu/.env --name classwk-container solomon11/classwork:latest
          EOF
